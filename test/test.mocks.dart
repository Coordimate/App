// Mocks generated by Mockito 5.4.4 from annotations
// in coordimate/test/test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:convert' as _i13;
import 'dart:typed_data' as _i15;

import 'package:async/async.dart' as _i19;
import 'package:coordimate/controllers/auth_controller.dart' as _i22;
import 'package:coordimate/controllers/group_controller.dart' as _i26;
import 'package:coordimate/controllers/meeting_controller.dart' as _i20;
import 'package:coordimate/controllers/schedule_controller.dart' as _i28;
import 'package:coordimate/controllers/user_controller.dart' as _i25;
import 'package:coordimate/models/agenda_point.dart' as _i21;
import 'package:coordimate/models/chat_message.dart' as _i27;
import 'package:coordimate/models/groups.dart' as _i11;
import 'package:coordimate/models/meeting.dart' as _i8;
import 'package:coordimate/models/time_slot.dart' as _i29;
import 'package:coordimate/models/user.dart' as _i10;
import 'package:coordimate/pages/schedule_page.dart' as _i30;
import 'package:firebase_core/firebase_core.dart' as _i4;
import 'package:firebase_messaging/firebase_messaging.dart' as _i18;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i5;
import 'package:flutter/foundation.dart' as _i16;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:google_sign_in/google_sign_in.dart' as _i9;
import 'package:googleapis/calendar/v3.dart' as _i24;
import 'package:googleapis_auth/googleapis_auth.dart' as _i23;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:shared_preferences/shared_preferences.dart' as _i17;
import 'package:stream_channel/stream_channel.dart' as _i7;
import 'package:web_socket_channel/src/channel.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_2 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_3 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_4 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_5 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_6 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_7 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseApp_8 extends _i1.SmartFake implements _i4.FirebaseApp {
  _FakeFirebaseApp_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSettings_9 extends _i1.SmartFake
    implements _i5.NotificationSettings {
  _FakeNotificationSettings_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketSink_10 extends _i1.SmartFake implements _i6.WebSocketSink {
  _FakeWebSocketSink_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamChannel_11<T> extends _i1.SmartFake
    implements _i7.StreamChannel<T> {
  _FakeStreamChannel_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMeetingDetails_12 extends _i1.SmartFake
    implements _i8.MeetingDetails {
  _FakeMeetingDetails_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_13 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoogleSignIn_14 extends _i1.SmartFake implements _i9.GoogleSignIn {
  _FakeGoogleSignIn_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_15 extends _i1.SmartFake implements _i10.User {
  _FakeUser_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroup_16 extends _i1.SmartFake implements _i11.Group {
  _FakeGroup_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i13.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i12.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i12.Future<_i2.Response>);

  @override
  _i12.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<_i15.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i12.Future<_i15.Uint8List>.value(_i15.Uint8List(0)),
      ) as _i12.Future<_i15.Uint8List>);

  @override
  _i12.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i12.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i12.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_2(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_3(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_4(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_5(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_6(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_7(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i16.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i16.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i12.Future<Map<String, String>>);

  @override
  _i12.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i12.Future<bool?>.value(),
      ) as _i12.Future<bool?>);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i17.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i12.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i18.FirebaseMessaging {
  MockFirebaseMessaging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_8(
          this,
          Invocation.getter(#app),
        ),
      ) as _i4.FirebaseApp);

  @override
  set app(_i4.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAutoInitEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoInitEnabled),
        returnValue: false,
      ) as bool);

  @override
  _i12.Stream<String> get onTokenRefresh => (super.noSuchMethod(
        Invocation.getter(#onTokenRefresh),
        returnValue: _i12.Stream<String>.empty(),
      ) as _i12.Stream<String>);

  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);

  @override
  _i12.Future<_i5.RemoteMessage?> getInitialMessage() => (super.noSuchMethod(
        Invocation.method(
          #getInitialMessage,
          [],
        ),
        returnValue: _i12.Future<_i5.RemoteMessage?>.value(),
      ) as _i12.Future<_i5.RemoteMessage?>);

  @override
  _i12.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String?> getAPNSToken() => (super.noSuchMethod(
        Invocation.method(
          #getAPNSToken,
          [],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
          {#vapidKey: vapidKey},
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<bool> isSupported() => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<_i5.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [],
        ),
        returnValue: _i12.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_9(
          this,
          Invocation.method(
            #getNotificationSettings,
            [],
          ),
        )),
      ) as _i12.Future<_i5.NotificationSettings>);

  @override
  _i12.Future<_i5.NotificationSettings> requestPermission({
    bool? alert = true,
    bool? announcement = false,
    bool? badge = true,
    bool? carPlay = false,
    bool? criticalAlert = false,
    bool? provisional = false,
    bool? sound = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
          {
            #alert: alert,
            #announcement: announcement,
            #badge: badge,
            #carPlay: carPlay,
            #criticalAlert: criticalAlert,
            #provisional: provisional,
            #sound: sound,
          },
        ),
        returnValue: _i12.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_9(
          this,
          Invocation.method(
            #requestPermission,
            [],
            {
              #alert: alert,
              #announcement: announcement,
              #badge: badge,
              #carPlay: carPlay,
              #criticalAlert: criticalAlert,
              #provisional: provisional,
              #sound: sound,
            },
          ),
        )),
      ) as _i12.Future<_i5.NotificationSettings>);

  @override
  _i12.Future<void> sendMessage({
    String? to,
    Map<String, String>? data,
    String? collapseKey,
    String? messageId,
    String? messageType,
    int? ttl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #to: to,
            #data: data,
            #collapseKey: collapseKey,
            #messageId: messageId,
            #messageType: messageType,
            #ttl: ttl,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> setAutoInitEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setAutoInitEnabled,
          [enabled],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> setDeliveryMetricsExportToBigQuery(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDeliveryMetricsExportToBigQuery,
          [enabled],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> setForegroundNotificationPresentationOptions({
    bool? alert = false,
    bool? badge = false,
    bool? sound = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setForegroundNotificationPresentationOptions,
          [],
          {
            #alert: alert,
            #badge: badge,
            #sound: sound,
          },
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [WebSocketChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebSocketChannel extends _i1.Mock implements _i6.WebSocketChannel {
  MockWebSocketChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<void> get ready => (super.noSuchMethod(
        Invocation.getter(#ready),
        returnValue: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i6.WebSocketSink get sink => (super.noSuchMethod(
        Invocation.getter(#sink),
        returnValue: _FakeWebSocketSink_10(
          this,
          Invocation.getter(#sink),
        ),
      ) as _i6.WebSocketSink);

  @override
  _i12.Stream<dynamic> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i12.Stream<dynamic>.empty(),
      ) as _i12.Stream<dynamic>);

  @override
  void pipe(_i7.StreamChannel<dynamic>? other) => super.noSuchMethod(
        Invocation.method(
          #pipe,
          [other],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.StreamChannel<S> transform<S>(
          _i7.StreamChannelTransformer<S, dynamic>? transformer) =>
      (super.noSuchMethod(
        Invocation.method(
          #transform,
          [transformer],
        ),
        returnValue: _FakeStreamChannel_11<S>(
          this,
          Invocation.method(
            #transform,
            [transformer],
          ),
        ),
      ) as _i7.StreamChannel<S>);

  @override
  _i7.StreamChannel<dynamic> transformStream(
          _i12.StreamTransformer<dynamic, dynamic>? transformer) =>
      (super.noSuchMethod(
        Invocation.method(
          #transformStream,
          [transformer],
        ),
        returnValue: _FakeStreamChannel_11<dynamic>(
          this,
          Invocation.method(
            #transformStream,
            [transformer],
          ),
        ),
      ) as _i7.StreamChannel<dynamic>);

  @override
  _i7.StreamChannel<dynamic> transformSink(
          _i19.StreamSinkTransformer<dynamic, dynamic>? transformer) =>
      (super.noSuchMethod(
        Invocation.method(
          #transformSink,
          [transformer],
        ),
        returnValue: _FakeStreamChannel_11<dynamic>(
          this,
          Invocation.method(
            #transformSink,
            [transformer],
          ),
        ),
      ) as _i7.StreamChannel<dynamic>);

  @override
  _i7.StreamChannel<dynamic> changeStream(
          _i12.Stream<dynamic> Function(_i12.Stream<dynamic>)? change) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeStream,
          [change],
        ),
        returnValue: _FakeStreamChannel_11<dynamic>(
          this,
          Invocation.method(
            #changeStream,
            [change],
          ),
        ),
      ) as _i7.StreamChannel<dynamic>);

  @override
  _i7.StreamChannel<dynamic> changeSink(
          _i12.StreamSink<dynamic> Function(_i12.StreamSink<dynamic>)?
              change) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeSink,
          [change],
        ),
        returnValue: _FakeStreamChannel_11<dynamic>(
          this,
          Invocation.method(
            #changeSink,
            [change],
          ),
        ),
      ) as _i7.StreamChannel<dynamic>);

  @override
  _i7.StreamChannel<S> cast<S>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _FakeStreamChannel_11<S>(
          this,
          Invocation.method(
            #cast,
            [],
          ),
        ),
      ) as _i7.StreamChannel<S>);
}

/// A class which mocks [WebSocketSink].
///
/// See the documentation for Mockito's code generation for more information.
class MockWebSocketSink extends _i1.Mock implements _i6.WebSocketSink {
  MockWebSocketSink() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<dynamic> get done => (super.noSuchMethod(
        Invocation.getter(#done),
        returnValue: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);

  @override
  _i12.Future<dynamic> close([
    int? closeCode,
    String? closeReason,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #close,
          [
            closeCode,
            closeReason,
          ],
        ),
        returnValue: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);

  @override
  void add(dynamic data) => super.noSuchMethod(
        Invocation.method(
          #add,
          [data],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<dynamic> addStream(_i12.Stream<dynamic>? stream) =>
      (super.noSuchMethod(
        Invocation.method(
          #addStream,
          [stream],
        ),
        returnValue: _i12.Future<dynamic>.value(),
      ) as _i12.Future<dynamic>);
}

/// A class which mocks [MeetingController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeetingController extends _i1.Mock implements _i20.MeetingController {
  MockMeetingController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i8.MeetingDetails> fetchMeetingDetails(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMeetingDetails,
          [id],
        ),
        returnValue:
            _i12.Future<_i8.MeetingDetails>.value(_FakeMeetingDetails_12(
          this,
          Invocation.method(
            #fetchMeetingDetails,
            [id],
          ),
        )),
      ) as _i12.Future<_i8.MeetingDetails>);

  @override
  _i12.Future<String> fetchMeetingSummary(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #fetchMeetingSummary,
          [id],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #fetchMeetingSummary,
            [id],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<bool> finishMeeting(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #finishMeeting,
          [id],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<_i8.MeetingStatus> answerInvitation(
    bool? accept,
    dynamic id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #answerInvitation,
          [
            accept,
            id,
          ],
        ),
        returnValue:
            _i12.Future<_i8.MeetingStatus>.value(_i8.MeetingStatus.declined),
      ) as _i12.Future<_i8.MeetingStatus>);

  @override
  _i12.Future<List<_i8.MeetingTileModel>> fetchArchivedMeetings() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchArchivedMeetings,
          [],
        ),
        returnValue: _i12.Future<List<_i8.MeetingTileModel>>.value(
            <_i8.MeetingTileModel>[]),
      ) as _i12.Future<List<_i8.MeetingTileModel>>);

  @override
  _i12.Future<void> saveSummary(
    dynamic id,
    dynamic summaryText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSummary,
          [
            id,
            summaryText,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i21.AgendaPoint>> getAgendaPoints(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAgendaPoints,
          [id],
        ),
        returnValue:
            _i12.Future<List<_i21.AgendaPoint>>.value(<_i21.AgendaPoint>[]),
      ) as _i12.Future<List<_i21.AgendaPoint>>);

  @override
  _i12.Future<void> createAgendaPoint(
    dynamic id,
    String? text,
    int? level,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAgendaPoint,
          [
            id,
            text,
            level,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteAgendaPoint(
    dynamic id,
    int? index,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAgendaPoint,
          [
            id,
            index,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateAgenda(
    dynamic id,
    dynamic agenda,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAgenda,
          [
            id,
            agenda,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i8.MeetingTileModel>> fetchMeetings() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMeetings,
          [],
        ),
        returnValue: _i12.Future<List<_i8.MeetingTileModel>>.value(
            <_i8.MeetingTileModel>[]),
      ) as _i12.Future<List<_i8.MeetingTileModel>>);

  @override
  _i12.Future<void> createMeeting(
    String? title,
    String? start,
    int? length,
    String? description,
    String? groupId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMeeting,
          [
            title,
            start,
            length,
            description,
            groupId,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateMeetingTime(
    String? meetingId,
    String? start,
    int? duration,
    String? googleEventId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMeetingTime,
          [
            meetingId,
            start,
            duration,
            googleEventId,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteMeeting(
    String? meetingId,
    String? googleEventId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMeeting,
          [
            meetingId,
            googleEventId,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<String> suggestMeetingLocation(String? meetingId) =>
      (super.noSuchMethod(
        Invocation.method(
          #suggestMeetingLocation,
          [meetingId],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #suggestMeetingLocation,
            [meetingId],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<void> updateMeetingLink(
    String? id,
    String? link,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMeetingLink,
          [
            id,
            link,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [AuthorizationController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthorizationController extends _i1.Mock
    implements _i22.AuthorizationController {
  MockAuthorizationController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get plainClient => (super.noSuchMethod(
        Invocation.getter(#plainClient),
        returnValue: _FakeClient_13(
          this,
          Invocation.getter(#plainClient),
        ),
      ) as _i2.Client);

  @override
  _i9.GoogleSignIn get googleSignIn => (super.noSuchMethod(
        Invocation.getter(#googleSignIn),
        returnValue: _FakeGoogleSignIn_14(
          this,
          Invocation.getter(#googleSignIn),
        ),
      ) as _i9.GoogleSignIn);

  @override
  set googleAuthClient(_i23.AuthClient? _googleAuthClient) =>
      super.noSuchMethod(
        Invocation.setter(
          #googleAuthClient,
          _googleAuthClient,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set calApi(_i24.CalendarApi? _calApi) => super.noSuchMethod(
        Invocation.setter(
          #calApi,
          _calApi,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userId(String? _userId) => super.noSuchMethod(
        Invocation.setter(
          #userId,
          _userId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<String?> getAccountId() => (super.noSuchMethod(
        Invocation.method(
          #getAccountId,
          [],
        ),
        returnValue: _i12.Future<String?>.value(),
      ) as _i12.Future<String?>);

  @override
  _i12.Future<bool> trySilentGoogleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #trySilentGoogleSignIn,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<bool> signIn(
    dynamic email,
    dynamic signInMethod, {
    dynamic password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            signInMethod,
          ],
          {#password: password},
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> register(
    dynamic email,
    dynamic username,
    dynamic signInMethod, {
    dynamic password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [
            email,
            username,
            signInMethod,
          ],
          {#password: password},
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<bool> checkStoredToken() => (super.noSuchMethod(
        Invocation.method(
          #checkStoredToken,
          [],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<_i15.Uint8List> cropToSquare(_i15.Uint8List? imageBytes) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropToSquare,
          [imageBytes],
        ),
        returnValue: _i12.Future<_i15.Uint8List>.value(_i15.Uint8List(0)),
      ) as _i12.Future<_i15.Uint8List>);

  @override
  _i12.Future<bool> checkAuthType(dynamic authType) => (super.noSuchMethod(
        Invocation.method(
          #checkAuthType,
          [authType],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);
}

/// A class which mocks [UserController].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserController extends _i1.Mock implements _i25.UserController {
  MockUserController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<void> setFcmToken(String? fcmToken) => (super.noSuchMethod(
        Invocation.method(
          #setFcmToken,
          [fcmToken],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i10.User> getInfo() => (super.noSuchMethod(
        Invocation.method(
          #getInfo,
          [],
        ),
        returnValue: _i12.Future<_i10.User>.value(_FakeUser_15(
          this,
          Invocation.method(
            #getInfo,
            [],
          ),
        )),
      ) as _i12.Future<_i10.User>);

  @override
  _i12.Future<void> changeUsername(
    dynamic username,
    dynamic id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeUsername,
          [
            username,
            id,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteUser(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<bool> sendChangePswdRequest(
    dynamic newPswd,
    dynamic oldPswd,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendChangePswdRequest,
          [
            newPswd,
            oldPswd,
          ],
        ),
        returnValue: _i12.Future<bool>.value(false),
      ) as _i12.Future<bool>);

  @override
  _i12.Future<void> updateLocation() => (super.noSuchMethod(
        Invocation.method(
          #updateLocation,
          [],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateRandomCoffee(
    dynamic id,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRandomCoffee,
          [
            id,
            data,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [GroupController].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupController extends _i1.Mock implements _i26.GroupController {
  MockGroupController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set group(_i11.Group? _group) => super.noSuchMethod(
        Invocation.setter(
          #group,
          _group,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<List<_i11.Group>> getGroups() => (super.noSuchMethod(
        Invocation.method(
          #getGroups,
          [],
        ),
        returnValue: _i12.Future<List<_i11.Group>>.value(<_i11.Group>[]),
      ) as _i12.Future<List<_i11.Group>>);

  @override
  _i12.Future<_i11.Group> getGroup(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #getGroup,
          [id],
        ),
        returnValue: _i12.Future<_i11.Group>.value(_FakeGroup_16(
          this,
          Invocation.method(
            #getGroup,
            [id],
          ),
        )),
      ) as _i12.Future<_i11.Group>);

  @override
  _i12.Future<void> createGroup(
    String? name,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createGroup,
          [
            name,
            description,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i8.MeetingTileModel>> fetchGroupMeetings(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroupMeetings,
          [id],
        ),
        returnValue: _i12.Future<List<_i8.MeetingTileModel>>.value(
            <_i8.MeetingTileModel>[]),
      ) as _i12.Future<List<_i8.MeetingTileModel>>);

  @override
  _i12.Future<void> updateGroupDescription(
    String? id,
    String? description,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroupDescription,
          [
            id,
            description,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateGroupName(
    String? id,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroupName,
          [
            id,
            name,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteGroup(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteGroup,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> leaveGroup(String? id) => (super.noSuchMethod(
        Invocation.method(
          #leaveGroup,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> removeUser(
    dynamic id,
    dynamic userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUser,
          [
            id,
            userId,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<List<_i10.UserCard>> fetchGroupUsers(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroupUsers,
          [id],
        ),
        returnValue: _i12.Future<List<_i10.UserCard>>.value(<_i10.UserCard>[]),
      ) as _i12.Future<List<_i10.UserCard>>);

  @override
  _i12.Future<List<_i27.ChatMessageModel>> fetchGroupChatMessages(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroupChatMessages,
          [id],
        ),
        returnValue: _i12.Future<List<_i27.ChatMessageModel>>.value(
            <_i27.ChatMessageModel>[]),
      ) as _i12.Future<List<_i27.ChatMessageModel>>);

  @override
  _i12.Future<String> shareInviteLink(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #shareInviteLink,
          [id],
        ),
        returnValue: _i12.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #shareInviteLink,
            [id],
          ),
        )),
      ) as _i12.Future<String>);

  @override
  _i12.Future<void> createPoll(
    dynamic id,
    dynamic pollData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPoll,
          [
            id,
            pollData,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i11.GroupPoll?> fetchPoll(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #fetchPoll,
          [id],
        ),
        returnValue: _i12.Future<_i11.GroupPoll?>.value(),
      ) as _i12.Future<_i11.GroupPoll?>);

  @override
  _i12.Future<void> deletePoll(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #deletePoll,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> voteOnPoll(
    dynamic id,
    dynamic optionIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #voteOnPoll,
          [
            id,
            optionIndex,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateGroupMeetingLink(
    String? id,
    String? link,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroupMeetingLink,
          [
            id,
            link,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);
}

/// A class which mocks [ScheduleController].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleController extends _i1.Mock
    implements _i28.ScheduleController {
  MockScheduleController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get scheduleUrl => (super.noSuchMethod(
        Invocation.getter(#scheduleUrl),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#scheduleUrl),
        ),
      ) as String);

  @override
  set scheduleUrl(String? _scheduleUrl) => super.noSuchMethod(
        Invocation.setter(
          #scheduleUrl,
          _scheduleUrl,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get pageTitle => (super.noSuchMethod(
        Invocation.getter(#pageTitle),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#pageTitle),
        ),
      ) as String);

  @override
  set pageTitle(String? _pageTitle) => super.noSuchMethod(
        Invocation.setter(
          #pageTitle,
          _pageTitle,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isModifiable => (super.noSuchMethod(
        Invocation.getter(#isModifiable),
        returnValue: false,
      ) as bool);

  @override
  set isModifiable(bool? _isModifiable) => super.noSuchMethod(
        Invocation.setter(
          #isModifiable,
          _isModifiable,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get canCreateMeeting => (super.noSuchMethod(
        Invocation.getter(#canCreateMeeting),
        returnValue: false,
      ) as bool);

  @override
  set canCreateMeeting(bool? _canCreateMeeting) => super.noSuchMethod(
        Invocation.setter(
          #canCreateMeeting,
          _canCreateMeeting,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get ownerId => (super.noSuchMethod(
        Invocation.getter(#ownerId),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#ownerId),
        ),
      ) as String);

  @override
  set ownerId(String? _ownerId) => super.noSuchMethod(
        Invocation.setter(
          #ownerId,
          _ownerId,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setScheduleParams(
    dynamic scheduleUrl_,
    dynamic pageTitle_,
    dynamic isModifiable_,
    dynamic canCreateMeeting_,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setScheduleParams,
          [
            scheduleUrl_,
            pageTitle_,
            isModifiable_,
            canCreateMeeting_,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.Future<List<_i29.TimeSlot>> getTimeSlots() => (super.noSuchMethod(
        Invocation.method(
          #getTimeSlots,
          [],
        ),
        returnValue: _i12.Future<List<_i29.TimeSlot>>.value(<_i29.TimeSlot>[]),
      ) as _i12.Future<List<_i29.TimeSlot>>);

  @override
  _i12.Future<void> createTimeSlot(
    int? day,
    double? start,
    double? length,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTimeSlot,
          [
            day,
            start,
            length,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> deleteTimeSlot(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTimeSlot,
          [id],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<void> updateTimeSlot(
    String? id,
    int? day,
    double? start,
    double? length,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTimeSlot,
          [
            id,
            day,
            start,
            length,
          ],
        ),
        returnValue: _i12.Future<void>.value(),
        returnValueForMissingStub: _i12.Future<void>.value(),
      ) as _i12.Future<void>);

  @override
  _i12.Future<_i30.SchedulePage?> tryParseUserScheduleLink(Uri? uri) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryParseUserScheduleLink,
          [uri],
        ),
        returnValue: _i12.Future<_i30.SchedulePage?>.value(),
      ) as _i12.Future<_i30.SchedulePage?>);

  @override
  _i12.Future<_i11.Group?> tryParseGroupJoinLink(Uri? uri) =>
      (super.noSuchMethod(
        Invocation.method(
          #tryParseGroupJoinLink,
          [uri],
        ),
        returnValue: _i12.Future<_i11.Group?>.value(),
      ) as _i12.Future<_i11.Group?>);
}
